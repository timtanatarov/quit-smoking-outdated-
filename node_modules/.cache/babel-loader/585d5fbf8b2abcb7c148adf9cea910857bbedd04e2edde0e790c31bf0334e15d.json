{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Frontend\\\\quit-smoking\\\\src\\\\Components\\\\Clock\\\\Clock.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      start: new Date(2022, 12, 3, 11, 26, 0),\n      finish: new Date()\n    };\n  }\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n  tick() {\n    this.setState({\n      finish: new Date()\n    });\n  }\n  getPastTime(start, finish) {\n    return finish - start;\n  }\n  getDaysDiff(timeDiff) {\n    return Math.floor(timeDiff / (1000 * 60 * 60 * 24));\n  }\n  getHoursDiff(timeDiff) {\n    return Math.floor(timeDiff / (1000 * 60 * 60) - this.getDaysDiff(timeDiff) * 24);\n  }\n  getMinutesDiff(timeDiff) {\n    return Math.floor(timeDiff / (1000 * 60) - (this.getDaysDiff(timeDiff) * 24 * 60 + this.getHoursDiff(timeDiff) * 60));\n  }\n  getSecondsDiff(timeDiff) {\n    return Math.floor(timeDiff / 1000 - (this.getDaysDiff(timeDiff) * 24 * 60 * 60 + this.getHoursDiff(timeDiff) * 60 * 60 + this.getMinutesDiff(timeDiff) * 60));\n  }\n  refreshStart() {\n    this.setState(function () {\n      return {\n        start: new Date()\n      };\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"You lasted:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: `${this.getDaysDiff(this.getPastTime(this.state.start, this.state.finish))} days, \n                     ${this.getHoursDiff(this.getPastTime(this.state.start, this.state.finish))} hours,\n                     ${this.getMinutesDiff(this.getPastTime(this.state.start, this.state.finish))} minutes,\n                     ${this.getSecondsDiff(this.getPastTime(this.state.start, this.state.finish))} seconds.\n                    `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Good job! Just go ahead!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.refreshStart,\n        children: \"\\u0411\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C \\u043A\\u0443\\u0440\\u0438\\u0442\\u044C!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Clock;","map":{"version":3,"names":["React","Clock","Component","constructor","props","state","start","Date","finish","componentDidMount","timerID","setInterval","tick","componentWillUnmount","clearInterval","setState","getPastTime","getDaysDiff","timeDiff","Math","floor","getHoursDiff","getMinutesDiff","getSecondsDiff","refreshStart","render"],"sources":["C:/Users/User/Desktop/Frontend/quit-smoking/src/Components/Clock/Clock.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nclass Clock extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            start: new Date(2022, 12, 3, 11, 26, 0),\r\n            finish: new Date(),\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timerID = setInterval(\r\n            () => this.tick(), 1000\r\n        );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n    }\r\n\r\n    tick(){\r\n        this.setState({\r\n            finish: new Date(),\r\n        })\r\n    }\r\n\r\n    getPastTime(start, finish){\r\n        return finish - start;\r\n    }\r\n\r\n    getDaysDiff(timeDiff){\r\n        return Math.floor(timeDiff / (1000 * 60 * 60 * 24));\r\n    }\r\n\r\n    getHoursDiff(timeDiff){\r\n        return Math.floor(timeDiff / (1000 * 60 * 60) - this.getDaysDiff(timeDiff) * 24);\r\n    }\r\n\r\n    getMinutesDiff(timeDiff){\r\n        return Math.floor(timeDiff / (1000 * 60) - (this.getDaysDiff(timeDiff) * 24 * 60 + this.getHoursDiff(timeDiff) * 60));\r\n    }\r\n\r\n    getSecondsDiff(timeDiff){\r\n        return Math.floor(timeDiff / 1000 - (this.getDaysDiff(timeDiff) * 24 * 60 * 60 + this.getHoursDiff(timeDiff) * 60 * 60 + this.getMinutesDiff(timeDiff)* 60));\r\n    }\r\n\r\n    refreshStart(){\r\n        this.setState(function(){\r\n            return { start: new Date(), };\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>\r\n                   You lasted:\r\n                </h1>\r\n                <h1>{\r\n                    `${this.getDaysDiff(this.getPastTime(this.state.start, this.state.finish))} days, \r\n                     ${this.getHoursDiff(this.getPastTime(this.state.start, this.state.finish))} hours,\r\n                     ${this.getMinutesDiff(this.getPastTime(this.state.start, this.state.finish))} minutes,\r\n                     ${this.getSecondsDiff(this.getPastTime(this.state.start, this.state.finish))} seconds.\r\n                    `\r\n                }\r\n                </h1>\r\n                <h2>Good job! Just go ahead!</h2>\r\n                <button onClick={this.refreshStart}>\r\n                    Бросить курить!\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Clock;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,KAAK,SAASD,KAAK,CAACE,SAAS,CAAC;EAChCC,WAAW,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACTC,KAAK,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;MACvCC,MAAM,EAAE,IAAID,IAAI;IACpB,CAAC;EACL;EAEAE,iBAAiB,GAAG;IAChB,IAAI,CAACC,OAAO,GAAGC,WAAW,CACtB,MAAM,IAAI,CAACC,IAAI,EAAE,EAAE,IAAI,CAC1B;EACL;EAEAC,oBAAoB,GAAG;IACnBC,aAAa,CAAC,IAAI,CAACJ,OAAO,CAAC;EAC/B;EAEAE,IAAI,GAAE;IACF,IAAI,CAACG,QAAQ,CAAC;MACVP,MAAM,EAAE,IAAID,IAAI;IACpB,CAAC,CAAC;EACN;EAEAS,WAAW,CAACV,KAAK,EAAEE,MAAM,EAAC;IACtB,OAAOA,MAAM,GAAGF,KAAK;EACzB;EAEAW,WAAW,CAACC,QAAQ,EAAC;IACjB,OAAOC,IAAI,CAACC,KAAK,CAACF,QAAQ,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;EACvD;EAEAG,YAAY,CAACH,QAAQ,EAAC;IAClB,OAAOC,IAAI,CAACC,KAAK,CAACF,QAAQ,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,IAAI,CAACD,WAAW,CAACC,QAAQ,CAAC,GAAG,EAAE,CAAC;EACpF;EAEAI,cAAc,CAACJ,QAAQ,EAAC;IACpB,OAAOC,IAAI,CAACC,KAAK,CAACF,QAAQ,IAAI,IAAI,GAAG,EAAE,CAAC,IAAI,IAAI,CAACD,WAAW,CAACC,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAACG,YAAY,CAACH,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC;EACzH;EAEAK,cAAc,CAACL,QAAQ,EAAC;IACpB,OAAOC,IAAI,CAACC,KAAK,CAACF,QAAQ,GAAG,IAAI,IAAI,IAAI,CAACD,WAAW,CAACC,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAACG,YAAY,CAACH,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAACI,cAAc,CAACJ,QAAQ,CAAC,GAAE,EAAE,CAAC,CAAC;EAChK;EAEAM,YAAY,GAAE;IACV,IAAI,CAACT,QAAQ,CAAC,YAAU;MACpB,OAAO;QAAET,KAAK,EAAE,IAAIC,IAAI;MAAI,CAAC;IACjC,CAAC,CAAC;EACN;EAEAkB,MAAM,GAAG;IACL,oBACI;MAAA,wBACI;QAAA,UAAI;MAEJ;QAAA;QAAA;QAAA;MAAA,QAAK,eACL;QAAA,UACK,GAAE,IAAI,CAACR,WAAW,CAAC,IAAI,CAACD,WAAW,CAAC,IAAI,CAACX,KAAK,CAACC,KAAK,EAAE,IAAI,CAACD,KAAK,CAACG,MAAM,CAAC,CAAE;AAC/F,uBAAuB,IAAI,CAACa,YAAY,CAAC,IAAI,CAACL,WAAW,CAAC,IAAI,CAACX,KAAK,CAACC,KAAK,EAAE,IAAI,CAACD,KAAK,CAACG,MAAM,CAAC,CAAE;AAChG,uBAAuB,IAAI,CAACc,cAAc,CAAC,IAAI,CAACN,WAAW,CAAC,IAAI,CAACX,KAAK,CAACC,KAAK,EAAE,IAAI,CAACD,KAAK,CAACG,MAAM,CAAC,CAAE;AAClG,uBAAuB,IAAI,CAACe,cAAc,CAAC,IAAI,CAACP,WAAW,CAAC,IAAI,CAACX,KAAK,CAACC,KAAK,EAAE,IAAI,CAACD,KAAK,CAACG,MAAM,CAAC,CAAE;AAClG;MAAqB;QAAA;QAAA;QAAA;MAAA,QAEA,eACL;QAAA,UAAI;MAAwB;QAAA;QAAA;QAAA;MAAA,QAAK,eACjC;QAAQ,OAAO,EAAE,IAAI,CAACgB,YAAa;QAAA,UAAC;MAEpC;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACP;EAEd;AACJ;AAEA,eAAevB,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}