{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Frontend\\\\quit-smoking\\\\src\\\\Components\\\\Clock\\\\Clock.jsx\";\nimport ReactDOM from \"react-dom/client\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      start: new Date(2023, 1, 3, 14, 30, 0),\n      finish: new Date()\n    };\n  }\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n  tick() {\n    this.setState({\n      finish: new Date()\n    });\n  }\n  getPastTime(start, finish) {\n    return finish - start;\n  }\n  getDaysDiff(timeDiff) {\n    return Math.floor(timeDiff / (1000 * 60 * 60 * 24));\n  }\n  getHoursDiff(timeDiff) {\n    return Math.floor(timeDiff / (1000 * 60 * 60) - this.getDaysDiff(timeDiff) * 24);\n  }\n  getMinutesDiff(timeDiff) {\n    return Math.floor(timeDiff / (1000 * 60) - (this.getDaysDiff(timeDiff) * 24 * 60 + this.getDaysDiff(this.getHoursDiff(timeDiff)) * 60));\n  }\n  getSecondsDiff(timeDiff) {\n    return Math.floor(timeDiff / 1000 - (this.getDaysDiff(timeDiff) * 24 * 60 * 60 + this.getDaysDiff(this.getHoursDiff(timeDiff)) * 60 * 60 + this.getDaysDiff(this.getHoursDiff(this.getMinutesDiff(timeDiff))) * 60));\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u041A\\u0440\\u0430\\u0441\\u0430\\u0432\\u0447\\u0438\\u043A, \\u0435\\u0449\\u0435 \\u043D\\u0435 \\u0441\\u043B\\u043E\\u043C\\u0430\\u043B\\u0441\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: `\n                    You lasted ${this.getDaysDiff(this.getPastTime(this.state.start, this.state.finish))} days, ${this.getHoursDiff(this.getPastTime(this.state.start, this.state.finish))} hours,\n                     ${this.getMinutesDiff(this.getPastTime(this.state.start, this.state.finish))} minutes,\n                     ${this.getSecondsDiff(this.getPastTime(this.state.start, this.state.finish))} seconds.\n                    `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n}\nfunction tick() {\n  root.render( /*#__PURE__*/_jsxDEV(Clock, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 17\n  }, this));\n}\nsetInterval(tick, 1000);\nexport default Clock;","map":{"version":3,"names":["ReactDOM","React","root","createRoot","document","getElementById","Clock","Component","constructor","props","state","start","Date","finish","componentDidMount","timerID","setInterval","tick","componentWillUnmount","clearInterval","setState","getPastTime","getDaysDiff","timeDiff","Math","floor","getHoursDiff","getMinutesDiff","getSecondsDiff","render"],"sources":["C:/Users/User/Desktop/Frontend/quit-smoking/src/Components/Clock/Clock.jsx"],"sourcesContent":["import ReactDOM from \"react-dom/client\";\r\nimport React from 'react';\r\n\r\nconst root = ReactDOM.createRoot(\r\n    document.getElementById('root')\r\n);\r\n\r\nclass Clock extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            start: new Date(2023, 1, 3, 14, 30, 0),\r\n            finish: new Date(),\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timerID = setInterval(\r\n            () => this.tick(), 1000\r\n        );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n    }\r\n\r\n    tick(){\r\n        this.setState({\r\n            finish: new Date(),\r\n        })\r\n    }\r\n\r\n    getPastTime(start, finish){\r\n        return finish - start;\r\n    }\r\n\r\n    getDaysDiff(timeDiff){\r\n        return Math.floor(timeDiff / (1000 * 60 * 60 * 24));\r\n    }\r\n\r\n    getHoursDiff(timeDiff){\r\n        return Math.floor(timeDiff / (1000 * 60 * 60) - this.getDaysDiff(timeDiff) * 24);\r\n    }\r\n\r\n    getMinutesDiff(timeDiff){\r\n        return Math.floor(timeDiff / (1000 * 60) - (this.getDaysDiff(timeDiff) * 24 * 60 + this.getDaysDiff(this.getHoursDiff(timeDiff)) * 60));\r\n    }\r\n\r\n    getSecondsDiff(timeDiff){\r\n        return Math.floor(timeDiff / (1000) - (this.getDaysDiff(timeDiff) * 24 * 60 * 60 + this.getDaysDiff(this.getHoursDiff(timeDiff)) * 60 * 60 + this.getDaysDiff(this.getHoursDiff(this.getMinutesDiff(timeDiff))) * 60));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Красавчик, еще не сломался</h1>\r\n                <h2>{\r\n                    `\r\n                    You lasted ${this.getDaysDiff(this.getPastTime(this.state.start, this.state.finish))} days, ${this.getHoursDiff(this.getPastTime(this.state.start, this.state.finish))} hours,\r\n                     ${this.getMinutesDiff(this.getPastTime(this.state.start, this.state.finish))} minutes,\r\n                     ${this.getSecondsDiff(this.getPastTime(this.state.start, this.state.finish))} seconds.\r\n                    `\r\n                }\r\n                </h2>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction tick() {\r\n    root.render(<Clock />);\r\n}\r\n\r\nsetInterval(tick, 1000);\r\n\r\nexport default Clock;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}